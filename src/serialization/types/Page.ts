/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Webflow from "../../api";
import * as core from "../../core";

export const Page: core.serialization.ObjectSchema<serializers.Page.Raw, Webflow.Page> = core.serialization.object({
    id: core.serialization.string().optional(),
    siteId: core.serialization.string().optional(),
    title: core.serialization.string().optional(),
    slug: core.serialization.string().optional(),
    parentId: core.serialization.string().optional(),
    collectionId: core.serialization.string().optional(),
    createdOn: core.serialization.date().optional(),
    lastUpdated: core.serialization.date().optional(),
    archived: core.serialization.boolean().optional(),
    draft: core.serialization.boolean().optional(),
    canBranch: core.serialization.boolean().optional(),
    isMembersOnly: core.serialization.boolean().optional(),
    seo: core.serialization.lazyObject(async () => (await import("..")).PageSeo).optional(),
    openGraph: core.serialization.lazyObject(async () => (await import("..")).PageOpenGraph).optional(),
});

export declare namespace Page {
    interface Raw {
        id?: string | null;
        siteId?: string | null;
        title?: string | null;
        slug?: string | null;
        parentId?: string | null;
        collectionId?: string | null;
        createdOn?: string | null;
        lastUpdated?: string | null;
        archived?: boolean | null;
        draft?: boolean | null;
        canBranch?: boolean | null;
        isMembersOnly?: boolean | null;
        seo?: serializers.PageSeo.Raw | null;
        openGraph?: serializers.PageOpenGraph.Raw | null;
    }
}
