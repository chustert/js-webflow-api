/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Webflow from "../../api";
import * as core from "../../core";

export const CollectionItem: core.serialization.ObjectSchema<serializers.CollectionItem.Raw, Webflow.CollectionItem> =
    core.serialization.object({
        id: core.serialization.string(),
        lastPublished: core.serialization.string().optional(),
        lastUpdated: core.serialization.string().optional(),
        createdOn: core.serialization.string().optional(),
        isArchived: core.serialization.boolean().optional(),
        isDraft: core.serialization.boolean().optional(),
        fieldData: core.serialization.lazyObject(async () => (await import("..")).CollectionItemFieldData).optional(),
    });

export declare namespace CollectionItem {
    interface Raw {
        id: string;
        lastPublished?: string | null;
        lastUpdated?: string | null;
        createdOn?: string | null;
        isArchived?: boolean | null;
        isDraft?: boolean | null;
        fieldData?: serializers.CollectionItemFieldData.Raw | null;
    }
}
