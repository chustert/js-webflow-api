/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Webflow from "../../api";
import * as core from "../../core";

export const SiteActivityLogItem: core.serialization.ObjectSchema<
    serializers.SiteActivityLogItem.Raw,
    Webflow.SiteActivityLogItem
> = core.serialization.object({
    id: core.serialization.string().optional(),
    createdOn: core.serialization.date().optional(),
    lastUpdated: core.serialization.date().optional(),
    event: core.serialization.string().optional(),
    resourceOperation: core.serialization
        .lazy(async () => (await import("..")).SiteActivityLogItemResourceOperation)
        .optional(),
    user: core.serialization.lazyObject(async () => (await import("..")).SiteActivityLogItemUser).optional(),
    resourceId: core.serialization.string().optional(),
    resourceName: core.serialization.string().optional(),
    newValue: core.serialization.string().optional(),
    previousValue: core.serialization.string().optional(),
    payload: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
});

export declare namespace SiteActivityLogItem {
    interface Raw {
        id?: string | null;
        createdOn?: string | null;
        lastUpdated?: string | null;
        event?: string | null;
        resourceOperation?: serializers.SiteActivityLogItemResourceOperation.Raw | null;
        user?: serializers.SiteActivityLogItemUser.Raw | null;
        resourceId?: string | null;
        resourceName?: string | null;
        newValue?: string | null;
        previousValue?: string | null;
        payload?: Record<string, unknown> | null;
    }
}
