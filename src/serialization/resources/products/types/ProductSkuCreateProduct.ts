/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Webflow from "../../../../api";
import * as core from "../../../../core";

export const ProductSkuCreateProduct: core.serialization.ObjectSchema<
    serializers.ProductSkuCreateProduct.Raw,
    Webflow.ProductSkuCreateProduct
> = core.serialization.object({
    id: core.serialization.string().optional(),
    lastPublished: core.serialization.date().optional(),
    lastUpdated: core.serialization.date().optional(),
    createdOn: core.serialization.date().optional(),
    isArchived: core.serialization.boolean().optional(),
    isDraft: core.serialization.boolean().optional(),
    fieldData: core.serialization
        .lazyObject(async () => (await import("../../..")).ProductSkuCreateProductFieldData)
        .optional(),
});

export declare namespace ProductSkuCreateProduct {
    interface Raw {
        id?: string | null;
        lastPublished?: string | null;
        lastUpdated?: string | null;
        createdOn?: string | null;
        isArchived?: boolean | null;
        isDraft?: boolean | null;
        fieldData?: serializers.ProductSkuCreateProductFieldData.Raw | null;
    }
}
