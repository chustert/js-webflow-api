/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Webflow from "../../../../api";
import * as core from "../../../../core";

export const ProductSkuCreateProductFieldData: core.serialization.ObjectSchema<
    serializers.ProductSkuCreateProductFieldData.Raw,
    Webflow.ProductSkuCreateProductFieldData
> = core.serialization.object({
    name: core.serialization.string(),
    slug: core.serialization.string(),
    description: core.serialization.string().optional(),
    shippable: core.serialization.boolean().optional(),
    skuProperties: core.serialization.property(
        "sku-properties",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).SkuPropertyList))
            .optional()
    ),
    categories: core.serialization.list(core.serialization.unknown()).optional(),
    taxCategory: core.serialization.property(
        "tax-category",
        core.serialization
            .lazy(async () => (await import("../../..")).ProductSkuCreateProductFieldDataTaxCategory)
            .optional()
    ),
    ecProductType: core.serialization.property(
        "ec-product-type",
        core.serialization
            .lazy(async () => (await import("../../..")).ProductSkuCreateProductFieldDataEcProductType)
            .optional()
    ),
    additionalProperties: core.serialization.unknown().optional(),
});

export declare namespace ProductSkuCreateProductFieldData {
    interface Raw {
        name: string;
        slug: string;
        description?: string | null;
        shippable?: boolean | null;
        "sku-properties"?: serializers.SkuPropertyList.Raw[] | null;
        categories?: unknown[] | null;
        "tax-category"?: serializers.ProductSkuCreateProductFieldDataTaxCategory.Raw | null;
        "ec-product-type"?: serializers.ProductSkuCreateProductFieldDataEcProductType.Raw | null;
        additionalProperties?: unknown | null;
    }
}
